;;;
;;;

(load "../../webotslib.l")
(defconstant ANSI_COLOR_RED "\x1b[31m")
(defconstant ANSI_COLOR_GREEN "\x1b[32m")
(defconstant ANSI_COLOR_YELLOW "\x1b[33m")
(defconstant ANSI_COLOR_BLUE "\x1b[34m")
(defconstant ANSI_COLOR_MAGENTA "\x1b[35m")
(defconstant ANSI_COLOR_CYAN "\x1b[36m")
(defconstant ANSI_COLOR_RESET "\x1b[0m")

(defconstant SPEED 4)
(defconstant  RED_CONST 0)
(defconstant  GREEN_CONST 1)
(defconstant  BLUE_CONST 2)
(defconstant  NONE 3)
(setq time_step 64)

(defun main nil
  (setq pause_counter 0)
  (setq color_names (vector "red" "green" "blue"))
  (setq ansi_colors (vector ANSI_COLOR_RED ANSI_COLOR_GREEN ANSI_COLOR_BLUE))
  (setq filenames   (vector "red_blob.png" "green_blob.png" "blue_blob.png"))
  (wb_robot_init)

  (setq time_step (wb_robot_get_basic_time_step))
  (format t "time_step=~A~%" time_step)
  (setq camera (wb_robot_get_device "camera"))
  (when (> camera 0)
    (wb_camera_enable camera (round time_step))
    (setq width (wb_camera_get_width camera))
    (setq height (wb_camera_get_height camera)))
  
  (setq left_motor (wb_robot_get_device "left wheel motor"))
  (setq right_motor (wb_robot_get_device "right wheel motor"))
  (wb_motor_set_position left_motor INFINITY)
  (wb_motor_set_position right_motor INFINITY)
  (wb_motor_set_velocity left_motor 0.0)
  (wb_motor_set_velocity right_motor 0.0)
  (setq red 0 green 0 blue 0)
  ;;
  (while (not (= (wb_robot_step time_step) -1))
    ;;(setq image (wb_camera_get_image camera))
    (when (> camera 0)
      (setq image (webots-camera-fstring camera))
      ;;(format t ";;image=~A~%" image)
      )
    (if (> pause_counter 0) (decf pause_counter))
    (cond
     ((> pause_counter (/ 640 time_step))
      (setq left_speed 0 right_speed 0))
     ((> pause_counter 0) 
      (setq left_speed (- SPEED) right_speed SPEED))
     (image
      (setq left_speed 0 right_speed  0))
     (t (setq red 0 green 0 blue 0)))
    (do ((i (/ width 3) (+ i 1)))
	((>= i (/ (* 2 width) 3)))
        (do ((j (/ height 2) (+ j 1)))
	    ((>= j (/ (* 3 height) 4)))
	    (format t " red=~A~%" (wb_camera_image_get_red image width i j))
	    (incf red (wb_camera_image_get_red image width i j))
	    (incf blue (wb_camera_image_get_blue image width i j))
	    (incf green (wb_camera_image_get_green image width i j))))
    (if (and (> red (* 3 green)) (> red (* 3 blue)))
        (setq current_blob RED_CONST)
      (if (and (> green (* 3 red)) (> green (* 3 blue)))
	  (setq current_blob GREEN_CONST)
	(if (and (> blue (* 3 red)) (> blue (* 3 green)))
	    (setq current_blob BLUE_CONST)
	  (setq current_blob NONE))))
    (if (= current_blob NONE)
	(setq left_speed (- SPEED) right_speed SPEED)
      (progn
        (setq left_speed 0 right_speed 0)
        (format t  "Looks like I found a ~A~A~A blob.~%"
		(elt ansi_colors current_blob) (elt color_names current_blob) ANSI_COLOR_RESET)
        (setq user_directory (wbu_system_getenv "HOME"))
        (setq filepath (instantiate string (+ (length user_directory) 16)))
        (setq filepath (format nil "~A/~A" user_directory (elt filenames current_blob)))
        (wb_camera_save_image camera filepath 100)
        (setq pause_counter (/ 1280 time_step))
	))
    (wb_motor_set_velocity left_motor left_speed)
    (wb_motor_set_velocity right_motor right_speed)
    )

  (wb_robot_cleanup)
  )
(main)
