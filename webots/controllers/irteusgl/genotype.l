;;
;;(setq RAND_MAX 1.0)
(defun random_get_integer (max) (random (round max)))
;;(defun random_get_uniform () (/ (random RAND_MAX) RAND_MAX))
(defun random_get_uniform () (random 1.0))
(defun random_get_gaussian () ;; polar form of the Box-Muller transformation
  (let (x1 x2 w (flag t))
    (while flag
      (setq x1 (- (* 2.0 (random_get_uniform)) 1.0))
      (setq x2 (- (* 2.0 (random_get_uniform)) 1.0))
      (setq w (+ (* x1 x1) (* x2 x2)))
      (if (< w 1.0) (setq flag nil)))
    (* x1 (sqrt (/ (* -2.0 (log w)) w)))))
(defconstant MUTATION_PROBABLITY 0.06)
(defconstant MUTATION_DEVIATION 0.2)
(defstruct _Genotype_ genes fitness)
(setq genotype_size 16)
(defun genotype_fread (g fd) (dotimes (i genotype_size) (setf (elt (g . genes) i) (read fd))) g)
(defun genotype_fwrite (g fd) (dotimes (i genotype_size) (print (elt (g . genes) i) fd)) g)
(defun genotype_create ()
  (let ((gen (instantiate _Genotype_)))
    (setq (gen . fitness) 0.0)
    (setq (gen . genes) (instantiate vector genotype_size))
    (dotimes (i genotype_size) (setf (elt (gen . genes) i) (random_get_uniform)))
    gen))
(defun genotype_clone (g)
  (let ((clone (genotype_create)))
    (dotimes (i genotype_size) (setf (elt (clone . genes) i) (elt (g . genes) i)))
    (setq (clone . fitness) (g . fitness))
    clone))
(defun genotype_mutate (g) ;; mutate genes with given probability and deviation
  (dotimes (i genotype_size)
    (if (< (random_get_uniform) MUTATION_PROBABLITY)
	(incf (elt (g . genes) i) (* (random_get_gaussian) MUTATION_DEVIATION)))))
(defun genotype_crossover (parent1 parent2) ;; crossover
  (let ((child (genotype_create)) ;; choose random locus
	(locus1 (random_get_integer genotype_size))
	(locus2 (random_get_integer genotype_size))
	tmp)
    ;; if locus1 is after locus2, swap them
    (when (> locus1 locus2)
      (setq tmp locus1)
      (setq locus1 locus2)
      (setq locus2 tmp))
    (dotimes (i genotype_size)
      (if (and (> i locus1) (< i locus2))
	  (setf (elt (child . genes) i) (elt (parent1 . genes) i))
	(setf (elt (child . genes) i) (elt (parent2 . genes) i))))
    child))
  
